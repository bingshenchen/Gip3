@model GIP.PRJ.TraiteurApp.Models.Order

@{
    ViewData["Title"] = "Afrekenen bestelling";
}

<h1>Afrekenen</h1>

<h4>Bestelling - @Model.Id</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CheckOut">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CustomerId" />
            <input type="hidden" asp-for="TimeSlot" />
            <div class="form-group">
                <label asp-for="OrderedOn" class="control-label"></label>
                <input asp-for="OrderedOn" class="form-control" readonly="readonly"/>
                <span asp-validation-for="OrderedOn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Total" class="control-label"></label>
                <input asp-for="Total" class="form-control">
                <span asp-validation-for="Total" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Reduction" class="control-label"></label>
                <input asp-for="Reduction" class="form-control">
                <span asp-validation-for="Reduction" class="text-danger"></span>
            </div>  

            <div class="form-group">
                <input type="submit" value="Betalen" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="OrderDetails" asp-route-id="@Model.Id">Overzicht bestelling</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
